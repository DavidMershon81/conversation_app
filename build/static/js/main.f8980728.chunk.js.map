{"version":3,"sources":["components/FormTextInput.js","components/AddUserForm.js","App.js","reportWebVitals.js","index.js"],"names":["FormTextInput","placeholderText","text","setText","isPassword","className","type","placeholder","value","onChange","e","target","defaultProps","AddUserForm","submitEvent","useState","username","setUsername","password","setPassword","onSubmit","preventDefault","alert","App","users","setUsers","loading","setLoading","useEffect","fetch","then","res","json","data","console","log","submitLabel","newUser","method","headers","body","JSON","stringify","map","user","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAEMA,EAAgB,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,gBAAiBC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WACpD,OACE,uBACEC,UAAU,kBACVC,KAAMF,EAAa,WAAa,OAChCG,YAAaN,EACbO,MAAON,EACPO,SAAW,SAACC,GAAD,OAAOP,EAAQO,EAAEC,OAAOH,WAKzCR,EAAcY,aAAe,CAC3BX,gBAAiB,iBACjBG,YAAY,GAGCJ,QCgBAa,EAhCG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACnB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAqBA,OACE,uBAAMC,SApBS,SAACV,GAChBA,EAAEW,iBACEL,EAMAE,GAMJJ,EAAY,CAAE,SAAaE,EAAU,SAAaE,IAClDD,EAAY,IACZE,EAAY,KANVG,MAAM,oBANNA,MAAM,sBAgBkBjB,UAAU,aAApC,UACE,cAAC,EAAD,CAAeJ,gBAAgB,WAAWC,KAAMc,EAAUb,QAASc,IACnE,cAAC,EAAD,CAAehB,gBAAgB,WAAWC,KAAMgB,EAAUf,QAASgB,EAAaf,WAAW,SAC3F,uBAAOE,KAAK,SAASE,MAAM,WAAWH,UAAU,wBCuBzCkB,G,MAhDH,WACV,MAA0BR,mBAAS,IAAnC,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAA8BV,oBAAS,GAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KAGAC,qBAAU,WACRC,MAAM,kBAAkBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GACnDR,EAASQ,QAEV,IACHC,QAAQC,IAAIX,GAmBZ,OACE,sBAAKnB,UAAU,MAAf,UACE,uDACA,oCACE,uCACA,cAAC,EAAD,CAAa+B,YAAY,WAAWnC,gBAAgB,YAAYa,YAtBtD,SAACuB,GACfV,GAAW,GACXE,MAAM,gBAAiB,CACrBS,OAAQ,OACRC,QAAS,CACP,eAAiB,oBAEnBC,KAAMC,KAAKC,UAAUL,KACpBP,MAAK,SAAAC,GACN,OAAOA,EAAIC,UACVF,MAAK,SAAAO,GACNH,QAAQC,IAAIE,GACZZ,EAAS,GAAD,mBAAKD,GAAL,CAAYa,KACpBV,GAAW,SAUT,qBAAKtB,UAAU,cAAf,SACGqB,GAAW,6CAEd,iDACA,6BACCF,EAAMmB,KAAI,SAACC,GAAD,OAAU,sCAAyB,iCAASA,EAAI,KAAtC,gBAAmE,iCAASA,EAAI,SAAvEA,EAAI,iBCjC3BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f8980728.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\n\nconst FormTextInput = ({placeholderText, text, setText, isPassword}) => {\n    return (\n      <input\n        className=\"form_text_input\" \n        type={isPassword ? \"password\" : \"text\"} \n        placeholder={placeholderText} \n        value={text} \n        onChange={ (e) => setText(e.target.value) }\n        />\n    )\n  }\n\n  FormTextInput.defaultProps = {\n    placeholderText: 'Type Something',\n    isPassword: false\n  }\n\n  export default FormTextInput","import { useState } from 'react'\nimport FormTextInput from './FormTextInput'\n\nconst AddUserForm = ({ submitEvent }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n  \n    const onSubmit = (e) => {\n      e.preventDefault();\n      if(!username)\n      {\n        alert('Enter a user name');\n        return;\n      }\n\n      if(!password)\n      {\n        alert('Enter a password');\n        return;\n      }\n  \n      submitEvent({ 'username' : username, 'password' : password })\n      setUsername('');\n      setPassword('');\n    }\n  \n    return (\n      <form onSubmit={onSubmit} className='input_form'>\n        <FormTextInput placeholderText='username' text={username} setText={setUsername}/>\n        <FormTextInput placeholderText='password' text={password} setText={setPassword} isPassword='true'/>\n        <input type=\"submit\" value='Add User' className=\"form_submit_btn\" />\n      </form>\n    )\n  }\n\n  export default AddUserForm","import { useState, useEffect } from 'react'\nimport AddUserForm from './components/AddUserForm'\nimport './App.css';\n\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  //testing pulling an array of cities from the test mysql db on the backend\n  useEffect(() => {\n    fetch('/api/get_users').then(res => res.json()).then(data => {\n      setUsers(data);\n    });\n  }, []);\n  console.log(users);\n\n  const addUser = (newUser) => {\n    setLoading(true);\n    fetch('/api/add_user', {\n      method: 'POST',\n      headers: { \n        'Content-type' : 'application/json' \n      },\n      body: JSON.stringify(newUser)\n    }).then(res => { \n      return res.json(); \n    }).then(newUser => {\n      console.log(newUser);\n      setUsers([...users, newUser]);\n      setLoading(false);\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Petition App Debug UI</h1>\n      <section>\n        <h2>Users</h2>\n        <AddUserForm submitLabel='Add User' placeholderText='User Name' submitEvent={addUser}/>\n        <div className=\"loading_box\">\n          {loading && <p>Loading...</p>}\n        </div>\n        <h4>A List of Users</h4>\n        <ul>\n        {users.map((user) => <li key={user['id']}>id: <strong>{user['id']}</strong> | username: <strong>{user['name']}</strong></li>)}\n        </ul>\n      </section>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}