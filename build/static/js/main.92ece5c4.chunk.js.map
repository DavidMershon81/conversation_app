{"version":3,"sources":["contexts/AppContext.js","hooks/useGetDataBase.js","hooks/useGetData.js","components/MiscControls.js","components/DebugUsersView.js","components/PetitionGroupView.js","hooks/usePostData.js","contexts/FormContext.js","components/FormControls.js","components/AddPetitionGroupForm.js","components/AddPetitionGroupView.js","components/AddPetitionForm.js","components/AddPetitionView.js","components/SignPetitionForm.js","components/SignPetitionSection.js","components/PetitionView.js","hooks/useLogin.js","components/LoginForm.js","components/LoginView.js","components/RegisterUserForm.js","components/RegisterView.js","components/ValidationView.js","components/HomeView.js","components/TopNavSection.js","hooks/useGetAuthData.js","components/MainAppRouter.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","createContext","getDataFromApi","url","params","logout","a","Error","axios","get","data","response","message","useGetDataBase","setLogout","useQuery","retry","failureCount","error","errorMessage","isLoggedIn","checkRetry","refetch","isLoading","isError","getData","loading","useGetData","useContext","SimpleButton","id","text","onBtnClick","className","type","onClick","LoadingBox","DebugUsersView","users","map","user","PetitionGroupPetitionsSection","petitionGroupId","requestParams","useRef","petition_group_id","current","petitions","length","petition","index","to","PetitionGroupMembersSection","members","useState","showMembers","setShowMembers","showMembersBtnText","member","PetitionGroupSummary","petitionGroup","PetitionGroupView","basePath","loggedIn","useLocation","pathname","replace","group_name","usePostData","onConfirm","confirmText","postData","dataToPost","post","useMutation","mutate","isSuccess","confirmMessage","useEffect","responseData","FormContext","FormErrorMessage","varName","visibleName","validateErrorMessage","errors","errorPresent","requiredError","validateError","FormTextInput","validateFunction","register","formParams","required","validate","rows","placeholder","FormRadioButton","valueName","valueText","value","FormRadioButtonGroup","buttonsConfig","FormHiddenInput","varValue","AddGroupFormFormRadioBtnGroup","AddPetitionGroupFormEmailSection","unregister","watch","customEmails","setCustomEmails","selectedRadioBtn","addCustomEmail","nextIndex","ce","AddPetitionGroupForm","onSubmit","useForm","handleSubmit","formState","console","log","Provider","AddPetitionGroupView","history","useHistory","push","postGroup","AddPetitionForm","AddPetitionView","location","postPetition","SignPetitionForm","SignPetitionSection","postSignature","SignaturesList","petition_id","sigData","getSignatures","userSignedData","getUserSigned","usLoading","usError","usErrorMessage","show_sign_form","revealed_signatures","rs","unrevealed_signatures","us","PetitionView","petitionId","useLogin","onLoginSuccess","username","password","auth","res","tryLogin","success","LoginForm","LoginView","refreshAuth","formData","email","RegisterUserForm","getValues","RegisterView","postUser","ValidationView","guid","setConfirmMessage","postValidation","HomeView","groups","TopNavSection","authData","loggedInUser","user_email","useGetAuthData","getAuthData","MainRouterSwitch","exact","path","component","MainAppRouter","initialIsOpen","App","queryClient","QueryClient","QueryClientProvider","client","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92ece5c4.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AppContext = createContext({});","import { useQuery } from 'react-query';\nimport axios from 'axios';\n\nconst getDataFromApi = async (url, params, logout) => {    \n    if(logout) {\n        throw new Error('Not logged in!');\n    }\n    \n    try {\n        return (await axios.get(url, { 'params' : params })).data;\n    } catch (error) {\n        throw new Error(error.response.data.message);\n    }\n}\n\nconst useGetDataBase = ({ url, params, logout=false, setLogout=null }) => {\n    \n    const checkRetry = (errorMessage) => {\n        const isLoggedIn = errorMessage !== \"Not logged in!\";\n        if(!isLoggedIn && setLogout != null) {\n            setLogout(true);\n        }\n        return isLoggedIn;\n    }\n\n    const onRetry = (failureCount, error) => {\n        return checkRetry(error.message);\n    }\n\n    const { data, refetch, isLoading, isError, error } = useQuery([url, url, params, logout], () => getDataFromApi(url, params, logout), { retry:onRetry });\n    const errorMessage = error ? error.message : \"\";\n    return { data, getData:refetch, loading:isLoading, error:isError, errorMessage:errorMessage };\n}\n\nexport default useGetDataBase;\n","import { useContext } from 'react';\nimport { AppContext } from '../contexts/AppContext';\nimport useGetDataBase from './useGetDataBase';\n\nconst useGetData = ({ url, params, logout=false }) => {\n    const { setLogout } = useContext(AppContext);\n    \n    return useGetDataBase({ url:url, params:params, logout:logout, setLogout:setLogout });\n}\n\nexport default useGetData;\n","const SimpleButton = ({ id, text, onBtnClick, className }) => {\n    const onClick = () => {\n        onBtnClick(id, text);\n    }\n\n    return (<button className={className} type=\"button\" onClick={onClick}>{text}</button>);\n}\n\nconst LoadingBox = ({ loading, error, errorMessage }) => {\n    return (\n        <>\n        { \n            (loading || error) &&\n            <div className=\"loading_box\">\n            {loading && <p>Loading...</p>}\n            {error && <p>error: {errorMessage}</p>}\n            </div>\n        }\n        </>\n    );\n};\n\nexport { SimpleButton, LoadingBox };","import useGetData from  '../hooks/useGetData';\nimport { LoadingBox } from './MiscControls';\n\nconst DebugUsersView = () => {\n  const { data:users, loading, error, errorMessage } = useGetData({ \n    url:'/api/users'\n  });\n\n  return (\n      <section>\n        <h2>Users (Debug View)</h2>\n        <p>This page shows all of the users in the app.</p>\n        <LoadingBox loading={loading} error={error} errorMessage={errorMessage} />\n        <ul className='users_list_group'>\n          { users && users.map((user) => \n              <li key={user['id']} className='users_list_item'>id:{user['id']} | {user['email']}<br/>{user['first_name']} {user['last_name']}</li>\n          )}\n        </ul>\n      </section>\n  );\n}\n\nexport default DebugUsersView;","import { useLocation, Link, Redirect } from 'react-router-dom';\nimport useGetData from  '../hooks/useGetData'\nimport { LoadingBox, SimpleButton } from './MiscControls';\nimport { useRef, useContext, useState } from 'react';\nimport { AppContext } from '../contexts/AppContext';\n\nconst PetitionGroupPetitionsSection = ({ petitionGroupId }) => {\n  const requestParams = useRef({ petition_group_id : petitionGroupId });\n  const { data:petitions, loading, error, errorMessage } = useGetData({ \n      url:'/api/petitions',\n      params:requestParams.current\n  });\n    \n  return (\n    <section className='petition_group_section'>\n    <strong>Petitions</strong>\n    <LoadingBox loading={loading} error={error} errorMessage={errorMessage} />\n    <ul className='petitions_list_group'>\n    { (petitions && petitions.length > 0) ? petitions.map((petition, index) => \n      <li className='petitions_list_item' key={index}>\n          <Link className='petitions_list_btn' to={`/petitions/${petition['id']}`}>View</Link>\n          <span>Subject: {petition['subject']}</span>\n      </li>) : \n      <p>This group has no petition yet.</p>\n    }\n    </ul>\n      {petitions && <div className='add_petition_group_btn'>\n        <Link className='add_petition_btn_text' to={`/add_petition/${petitionGroupId}`}>Add New Petition</Link>\n      </div>}\n    </section>\n  );\n};\n\nconst PetitionGroupMembersSection = ({ petitionGroupId }) => {\n  const requestParams = useRef({ petition_group_id : petitionGroupId });\n  const { data:members, loading, error, errorMessage } = useGetData({ \n      url:'/api/members',\n      params:requestParams.current,\n  });\n\n  const [showMembers, setShowMembers] = useState(false);\n  const showMembersBtnText = showMembers ? 'Hide' : 'Show';\n\n  const onToggleMembers = (id, text) => {\n    setShowMembers(!showMembers);\n  };\n\n  return (\n    <section className='petition_group_section'>\n      <strong>Members</strong>\n      <SimpleButton className='full_width_btn' onBtnClick={onToggleMembers} text={showMembersBtnText}/>\n      <LoadingBox loading={loading} error={error} errorMessage={errorMessage} />\n      {showMembers && <ul className='users_list_group'>\n      { (members && members.length > 0) ? members.map((member) => \n        <li className='users_list_item' key={member['email']}>{member['email']}</li>) : \n        <p>This group has no members yet.</p>\n      }\n      </ul>}\n    </section>\n  );\n};\n  \nconst PetitionGroupSummary = ({ petitionGroup }) => {\nreturn (\n    <p>\n        <strong>id:</strong> {petitionGroup['id']}<br/>\n        <strong>listserv_email:</strong> {petitionGroup['listserv_email']}<br/>\n    </p>\n    );\n};\n\nconst PetitionGroupView = ({ basePath }) => {\n  const { loggedIn } = useContext(AppContext);\n  const location = useLocation();\n  const petitionGroupId = location.pathname.replace(basePath, '');\n  const { data:petitionGroup, loading, error, errorMessage } = useGetData({ \n    url:`/api/petition_groups/${petitionGroupId}`\n  });\n\n  if(!loggedIn) {\n    return <Redirect to='/login' />\n  }\n  return (\n      <section className='petition_group_view'>\n          <LoadingBox loading={loading} error={error} errorMessage={errorMessage} />\n          { petitionGroup && (<>\n          <h2>Petition Group: {petitionGroup.group_name}</h2>\n          <PetitionGroupSummary petitionGroup={petitionGroup} />\n          <PetitionGroupMembersSection petitionGroupId={petitionGroupId} />\n          <PetitionGroupPetitionsSection petitionGroupId={petitionGroup['id']} /></>) }\n      </section>\n  );\n}\n\nexport default PetitionGroupView;","import { useEffect } from 'react'\nimport axios from 'axios';\nimport { useMutation } from 'react-query';\n\nconst usePostData = ({ url, onConfirm, confirmText }) => {\n    const postData = async (dataToPost) => {\n        try {\n            return (await axios.post(url, dataToPost)).data;\n        }catch (error) {\n            throw new Error(error.response.data.message);\n        }\n    }\n    const { mutate, data, isLoading, isError, error, isSuccess } = useMutation(postData);\n    const confirmMessage = isSuccess ? confirmText : null;\n\n    useEffect(() => {\n        if(isSuccess && onConfirm) {\n            onConfirm(data);\n        }\n    }, [onConfirm, isSuccess])\n\n    const errorMessage = error ? error.message : \"\";\n    return { post:mutate, responseData:data, loading:isLoading, error:isError, confirmMessage, errorMessage:errorMessage  };\n}\n\nexport default usePostData;\n","import { createContext } from 'react';\n\nexport const FormContext = createContext({});","import { useContext } from 'react';\nimport { FormContext } from '../contexts/FormContext';\n\nconst FormErrorMessage = ({ varName, visibleName, validateErrorMessage }) => {\n    const { errors } = useContext(FormContext);\n    const errorPresent = errors[varName] != null;\n    const requiredError = errorPresent && errors[varName].type === 'required';\n    const validateError = errorPresent && errors[varName].type === 'validate';\n\n    if(requiredError || validateError) {\n        const errorMessage = validateError ? validateErrorMessage :`${visibleName} required!`;\n        return (<span className='form_error_message'>{errorMessage}</span>);\n    }\n    return (<span></span>);\n};\n\nconst FormTextInput = ({ varName, visibleName, type, validateFunction=()=> { return true; }, validateErrorMessage }) => {\n    const { register } = useContext(FormContext);\n    const formParams = { \n        required: true,\n        validate: validateFunction\n    };\n\n    return (\n        <>\n            {   \n                type === 'textarea' ? \n                <textarea rows='10' className=\"form_text_area\" placeholder={visibleName} {...register(varName, formParams)} /> :\n                <input className=\"form_text_input\"  type={type} placeholder={visibleName} {...register(varName, formParams)} />\n            }\n            <FormErrorMessage varName={varName} visibleName={visibleName} validateErrorMessage={validateErrorMessage}/>\n        </>\n    );\n};\n\nconst FormRadioButton = ({ varName, valueName, valueText, onClick }) => {\n    const { register } = useContext(FormContext);\n    return (\n        <label className=\"form_checkbox_container\">\n            <input {...register(varName, { required: true })} type=\"radio\" value={valueName} onClick={() => { onClick(valueName);}} />{valueText}\n            <span className=\"checkmark\"></span>\n        </label>\n    );\n};\n\nconst FormRadioButtonGroup = ({ varName, visibleName, buttonsConfig, onClick }) => {\n    return (\n        <fieldset className=\"form_radio_button_set\">\n        { buttonsConfig.map(({ valueName, valueText}) => (\n            <FormRadioButton key={valueName} varName={varName} valueName={valueName} valueText={valueText} onClick={onClick}/>\n        )) }\n        <FormErrorMessage varName={varName} visibleName={visibleName} />\n    </fieldset>\n    )\n};\n\nconst FormHiddenInput = ({ varName, varValue }) => {\n    const { register } = useContext(FormContext);\n    return (<input type=\"hidden\" value={varValue} {...register(varName)} />);\n};\n\nexport { FormErrorMessage, FormTextInput, FormRadioButton, FormRadioButtonGroup, FormHiddenInput };","import { useState, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FormTextInput, FormRadioButtonGroup } from './FormControls';\nimport { FormContext } from '../contexts/FormContext';\n\nconst AddGroupFormFormRadioBtnGroup = ({ onBtnClick }) => {\n    const radioButtonsConfig = [\n        { valueName: 'listserv', valueText: 'Send petition to a single mailing list' },\n        { valueName: 'custom_emails', valueText: 'Send petition to a list of email addresses' }\n    ];\n\n    return (\n        <FormRadioButtonGroup \n            varName='email_type' \n            visibleName='email notification type' \n            buttonsConfig={radioButtonsConfig}\n            onClick={onBtnClick}\n        />\n    );\n};\n\nconst AddPetitionGroupFormEmailSection = () => {\n    const { unregister, watch } = useContext(FormContext);\n    const [customEmails, setCustomEmails] = useState([]);\n    const selectedRadioBtn = watch(\"email_type\");\n\n    const addCustomEmail = () => {\n        const nextIndex = `custom_email_${customEmails.length}`;\n        setCustomEmails([...customEmails, nextIndex]);\n    };\n\n    const onEmailTypeClick = (valueName) => {\n        if(valueName === 'listserv') {\n            unregister(customEmails);\n            setCustomEmails([]);\n        }\n        else if(valueName === 'custom_emails') {\n            unregister(['listserv_email']);\n            if(customEmails.length < 1) {\n                addCustomEmail();\n            }\n        }\n    };\n\n    return (\n        <fieldset className='notification_emails_section'>\n            <AddGroupFormFormRadioBtnGroup onBtnClick={onEmailTypeClick} />\n            { selectedRadioBtn === 'custom_emails' && (    \n            <fieldset className='notification_emails_section'>\n                { customEmails.map((ce) => (<FormTextInput key={ce} type='email' varName={ce} visibleName={ce} />)) }\n                <input className=\"add_email_button\" type=\"button\" onClick={addCustomEmail} value=\"Add Another Email\"/>\n            </fieldset>)}\n            \n            {selectedRadioBtn === 'listserv' && (\n            <fieldset className='notification_emails_section'>\n                <FormTextInput type='email' varName='listserv_email' visibleName='mailing list email' />\n            </fieldset>)}\n        </fieldset>\n    );\n};\n\nconst AddPetitionGroupForm = ({ onSubmit }) => {\n    const { register, unregister, handleSubmit, formState: { errors }, watch } = useForm();\n    const onSubmitClick = (data) => {\n        console.log(data);\n        onSubmit(data);\n    };\n\n    return (\n        <form className=\"input_form\" onSubmit={handleSubmit(onSubmitClick)}>\n            <FormContext.Provider value={{ register, unregister, watch, errors }}>\n                <FormTextInput type='text' varName='group_name' visibleName='group name' />\n                <AddPetitionGroupFormEmailSection />\n            </FormContext.Provider>\n            <input className=\"form_submit_btn\" type=\"submit\" value=\"Create New Petition Group\"/>\n        </form>\n    );\n}\n\nexport default AddPetitionGroupForm;\n","import usePostData from '../hooks/usePostData';\nimport AddPetitionGroupForm from './AddPetitionGroupForm';\nimport { LoadingBox } from './MiscControls';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { AppContext } from '../contexts/AppContext';\n\nconst AddPetitionGroupView = () => {\n    const { loggedIn } = useContext(AppContext);\n    const history = useHistory();\n    const onConfirmAddGroup = (responseData) => {\n        history.push(`/petition_group/${responseData.id}`)\n    }\n    const { post:postGroup, confirmMessage, loading, error, errorMessage } = usePostData({ \n        url:'/api/petition_groups', \n        confirmText:'Added Petition Group',\n        onConfirm:onConfirmAddGroup\n    });\n\n    if(!loggedIn) {\n        return <Redirect to='/login' />\n    }\n    return (\n        <section>\n            <h2>Add Petition Group</h2>\n            <p>Use this form to add a new petition group.</p>\n            <AddPetitionGroupForm onSubmit={postGroup}/>\n            {confirmMessage && <p>{confirmMessage}</p>}\n            <LoadingBox loading={loading} error={error} errorMessage={errorMessage} />\n        </section>\n    );\n}\n\nexport default AddPetitionGroupView\n","import { useForm } from 'react-hook-form';\nimport { FormTextInput, FormHiddenInput } from './FormControls';\nimport { FormContext } from '../contexts/FormContext';\n\nconst AddPetitionForm = ({ onSubmit, petitionGroupId }) => {\n    const { register, unregister, handleSubmit, formState: { errors }, watch } = useForm();\n    const onSubmitClick = (data) => {\n        console.log(data);\n        onSubmit(data);\n    };\n\n    return (\n        <form className=\"input_form\" onSubmit={handleSubmit(onSubmitClick)}>\n            <FormContext.Provider value={{ register, unregister, watch, errors }}>\n                <FormTextInput type='text' varName='subject' visibleName='subject' />\n                <FormTextInput type='textarea' varName='petition_text' visibleName='petition text' />\n                <FormHiddenInput varName='petition_group_id' varValue={petitionGroupId} />\n            </FormContext.Provider>\n            <input className=\"form_submit_btn\" type=\"submit\" value=\"Add New Petition\"/>\n        </form>\n    );\n}\n\nexport default AddPetitionForm;\n","import usePostData from   '../hooks/usePostData';\nimport AddPetitionForm from './AddPetitionForm';\nimport { LoadingBox } from './MiscControls';\nimport { useLocation, Redirect, useHistory } from 'react-router-dom';\nimport { useContext } from 'react'\nimport { AppContext } from '../contexts/AppContext';\n\nconst AddPetitionView = ({ basePath }) => {\n    const { loggedIn } = useContext(AppContext);\n    const location = useLocation();\n    const history = useHistory();\n    const petitionGroupId = location.pathname.replace(basePath, '');\n    const onConfirmAddPetition = (responseData) => {\n        console.log(`new petition id: ${responseData.id}`);\n        history.push(`/petitions/${responseData.id}`)\n    }\n    const { post:postPetition, confirmMessage, loading, error, errorMessage } = usePostData({ \n        url:'/api/petitions', \n        confirmText:'Added New Petition',\n        onConfirm:onConfirmAddPetition\n    });\n\n    if(!loggedIn) {\n        return <Redirect to='/login' />\n    }\n    return (\n        <section>\n            <h2>Add Petition</h2>\n            <p>Use this form to add a new petition.</p>\n            <AddPetitionForm petitionGroupId={petitionGroupId} onSubmit={postPetition} />\n            {confirmMessage && <p>{confirmMessage}</p>}\n            <LoadingBox loading={loading} error={error} errorMessage={errorMessage} />\n        </section>\n    );\n}\n\nexport default AddPetitionView\n","import { useForm } from 'react-hook-form';\nimport { FormTextInput, FormHiddenInput } from './FormControls';\nimport { FormContext } from '../contexts/FormContext';\n\nconst SignPetitionForm = ({ onSubmit, petition }) => {\n    const { register, unregister, handleSubmit, formState: { errors }, watch } = useForm();\n    const onSubmitClick = (data) => {\n        onSubmit(data);\n    };\n\n    return (\n        <form className=\"input_form\" onSubmit={handleSubmit(onSubmitClick)}>\n            <FormContext.Provider value={{ register, unregister, watch, errors }}>\n                <FormTextInput type='number' varName='reveal_threshold' visibleName='reveal threshold' />\n                <FormHiddenInput varName='petition_id' varValue={petition['id']} />\n            </FormContext.Provider>\n            <input className=\"form_submit_btn\" type=\"submit\" value='Sign Petition'/>\n        </form>\n    );\n}\n\nexport default SignPetitionForm;\n","import usePostData from '../hooks/usePostData';\nimport { LoadingBox } from './MiscControls';\nimport SignPetitionForm from './SignPetitionForm';\n\nconst SignPetitionSection = ({ petition, onConfirm }) => {    \n    const { post:postSignature, confirmMessage, loading, error, errorMessage } = usePostData({ \n        url:'/api/signatures', \n        onConfirm:onConfirm,\n        confirmText:'Submitted Signature'\n    });\n\n    return (\n        <section className='users_list_item test_signature_user_box'>\n            <SignPetitionForm onSubmit={postSignature} petition={petition} />\n            {confirmMessage && <p>{confirmMessage}</p>}\n            <LoadingBox loading={loading} error={error} errorMessage={errorMessage}/>\n        </section>\n    );\n}\n\nexport default SignPetitionSection","import { useLocation, Redirect } from 'react-router-dom';\nimport useGetData from  '../hooks/useGetData'\nimport { LoadingBox } from './MiscControls';\nimport SignPetitionSection from './SignPetitionSection';\nimport { useRef, useContext } from 'react';\nimport { AppContext } from '../contexts/AppContext';\n\nconst SignaturesList = ({ petition }) => {\n    const requestParams = useRef({ petition_id : petition['id'] });\n    const { data:sigData, getData:getSignatures, loading, error, errorMessage } = useGetData({ \n        url:'/api/signatures',\n        params:requestParams.current\n    });\n\n    const { data:userSignedData, getData:getUserSigned, usLoading, usError, usErrorMessage } = useGetData({ \n        url:'/api/user_signed',\n        params:requestParams.current\n    });\n\n    const onConfirmSign = () => {\n        getSignatures();\n        getUserSigned();\n    };\n\n    const show_sign_form = userSignedData != null && !userSignedData['user_signed'];\n\n    return (\n        <section>\n            <LoadingBox loading={loading} error={error} errorMessage={errorMessage}/>\n            <LoadingBox loading={usLoading} error={usError} errorMessage={usErrorMessage}/>\n            { sigData && <>\n                <h4>Revealed Signatures</h4>\n                <ul className='test_signature_user_group'>\n                { sigData.revealed_signatures.length < 1 && <li>No signatures have been revealed</li>}\n                { sigData.revealed_signatures.length > 0 && sigData.revealed_signatures.map((rs,index) => \n                <li key={index} className='users_list_item test_signature_user_box'>\n                    {rs}\n                </li>)}\n\n                </ul>\n                <h4>Unrevealed Signatures</h4>\n                <ul className='test_signature_user_group'>\n                { sigData.unrevealed_signatures.length < 1 && <li>There are no unrevealed signatures</li>}\n                { sigData.unrevealed_signatures.length > 0 && sigData.unrevealed_signatures.map((us,index) => \n                <li key={index} className='users_list_item test_signature_user_box'>\n                    There are {us['signatures']} unrevealed signatures at threshold {us['reveal_threshold']}\n                </li>)}\n\n                </ul>\n                { show_sign_form ? <SignPetitionSection petition={petition} onConfirm={onConfirmSign} /> :\n                    <p>You have already signed this petition.</p>\n                }\n            </>}\n        </section>\n    );\n}\n\nconst PetitionView = ({ basePath }) => {\n    const { loggedIn } = useContext(AppContext);\n    const location = useLocation();\n    const petitionId = location.pathname.replace(basePath, '');\n    const { data:petition, loading, error, errorMessage } = useGetData({ \n        url:`/api/petitions/${petitionId}`\n    });\n\n    if(!loggedIn) {\n        return <Redirect to='/login' />\n    }\n    return (\n        <section>\n            <LoadingBox loading={loading} error={error} errorMessage={errorMessage}/>\n            {petition && <>\n                <h2>Petition: {petition['subject']}</h2>\n                <p>Petition Text: {petition['petition_text']}</p>\n                <SignaturesList petition={petition}/>          \n            </>}\n        </section>\n    );\n}\n\nexport default PetitionView;","import { useEffect } from 'react'\nimport axios from 'axios';\nimport { useMutation } from 'react-query';\n\nconst useLogin = ({ url, onLoginSuccess }) => {\n    const postData = async ({ username, password}) => {\n        try {\n            const res = await axios.get(url, { auth:{ \"username\" : username, \"password\" : password } });\n            return res.data;\n        } catch (error) {\n            throw new Error(error.response.data.message);\n        }\n    }\n    const { mutate, isLoading, isError, error, isSuccess } = useMutation(postData);\n\n    useEffect(() => {\n        if(isSuccess) {\n            onLoginSuccess();\n        }\n    }, [isSuccess, onLoginSuccess])\n\n    const tryLogin = ({ username, password }) => {\n        mutate({ username, password });\n    }\n\n    const errorMessage = error ? error.message : \"\";\n    return { tryLogin, success:isSuccess, loading:isLoading, error:isError, errorMessage:errorMessage };\n}\n\nexport default useLogin;\n","import { useForm } from 'react-hook-form';\nimport { FormTextInput } from './FormControls';\nimport { FormContext } from '../contexts/FormContext';\n\nconst LoginForm = ({ onSubmit }) => {\n    const { register, handleSubmit, formState: { errors } } = useForm();\n    const onSubmitClick = (data) => {\n        onSubmit(data);\n    };\n\n    return (\n        <form className=\"input_form\" onSubmit={handleSubmit(onSubmitClick)}>\n            <FormContext.Provider value={{ register, errors }}>\n                <FormTextInput type='email' varName='email' visibleName='email' />\n                <FormTextInput type='password' varName='password' visibleName='password' />\n            </FormContext.Provider>\n            <input className=\"form_submit_btn\" type=\"submit\" value=\"Login\"/>\n        </form>\n    );\n}\n\nexport default LoginForm;\n","import useLogin from  '../hooks/useLogin';\nimport LoginForm from './LoginForm';\nimport { LoadingBox } from './MiscControls';\nimport { useContext } from 'react';\nimport { AppContext } from '../contexts/AppContext';\nimport { Redirect, Link } from 'react-router-dom';\n\nconst LoginView = () => {\n    const { refreshAuth, loggedIn } = useContext(AppContext);\n    const { tryLogin, success, loading, error, errorMessage } = useLogin({ url:'/api/login', onLoginSuccess:refreshAuth });\n    const submitLogin = (formData) => { tryLogin({ username:formData.email, password:formData.password }); };\n\n    if(loggedIn) {\n        return <Redirect to='/' />\n    }\n    return (\n        <section>\n            <h2>Login</h2>\n            { !success && <LoginForm onSubmit={submitLogin}/> }\n            { (loading || error) && <LoadingBox loading={loading} error={error} errorMessage={errorMessage} /> }\n            { success && <p>logged in.</p>}\n            <p>Don't have an account yet?<Link className='inline_link' to={`/register`}>Register A New Account</Link></p>\n        </section>\n    );\n}\n\nexport default LoginView\n","import { useForm } from 'react-hook-form';\nimport { FormTextInput } from './FormControls';\nimport { FormContext } from '../contexts/FormContext';\n\nconst RegisterUserForm = ({ onSubmit }) => {\n    const { register, handleSubmit, formState: { errors }, getValues } = useForm();\n    const onSubmitClick = (data) => {\n        onSubmit(data);\n    };\n\n    const onValidateConfirmPass = (value) => {\n        return getValues('password') === value;\n    }\n\n    return (\n        <form className=\"input_form\" onSubmit={handleSubmit(onSubmitClick)}>\n            <FormContext.Provider value={{ register, errors }}>\n                <FormTextInput type='email' varName='email' visibleName='email' />\n                <FormTextInput type='password' varName='password' visibleName='password' />\n                <FormTextInput \n                    type='password' varName='confirm_password' visibleName='confirm password' \n                    validateFunction={onValidateConfirmPass} validateErrorMessage=\"password doesn't match\"\n                />\n                <FormTextInput type='text' varName='first_name' visibleName='first name' />\n                <FormTextInput type='text' varName='last_name' visibleName='last name' />\n            </FormContext.Provider>\n            <input className=\"form_submit_btn\" type=\"submit\" value=\"Register Account\"/>\n        </form>\n    );\n}\n\nexport default RegisterUserForm;\n","import usePostData from  '../hooks/usePostData';\nimport RegisterUserForm from './RegisterUserForm';\nimport { LoadingBox } from './MiscControls';\nimport { Link } from 'react-router-dom';\n\nconst RegisterView = () => {\n    const onConfirm = () => {\n        console.log(\"confirmed registration!\")\n    };\n\n    const { post:postUser, confirmMessage, loading, error, errorMessage } = usePostData({ \n        url:'/api/users',\n        onConfirm:onConfirm,\n        confirmText:'Registered New Account, please check your email and validate it!'\n    });\n\n    return (\n        <section>\n            <h2>Register</h2>\n            <p>Use this form to register a new account.</p>\n            <RegisterUserForm onSubmit={postUser}/>\n            { confirmMessage && <p>{confirmMessage} </p>}\n            <LoadingBox loading={loading} error={error} errorMessage={errorMessage} />\n        </section>\n    );\n}\n\nexport default RegisterView\n","import { useLocation, Redirect } from 'react-router-dom';\nimport usePostData from  '../hooks/usePostData'\nimport { LoadingBox } from './MiscControls';\nimport SignPetitionSection from './SignPetitionSection';\nimport { useRef, useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../contexts/AppContext';\n\nconst ValidationView = ({ basePath }) => {\n    const location = useLocation();\n    const guid = location.pathname.replace(basePath, '');\n    const [confirmMessage, setConfirmMessage] = useState('');\n\n    const onConfirm = (data) => {\n        console.log('onConfirm running...');\n        console.log(data.message);\n        setConfirmMessage(data.message);\n    }\n\n    const { post:postValidation, loading, error, errorMessage } = usePostData({ \n        url:'/api/validations',\n        onConfirm:onConfirm,\n        confirmText:'Validated User!!'\n    });\n\n    useEffect(() => {\n        postValidation({ guid : guid });\n    }, []);\n\n    return (\n        <section>\n            <h2>Validation Page</h2>\n            <LoadingBox loading={loading} error={error} errorMessage={errorMessage}/>      \n            { !error && <>\n                \n                <p>{confirmMessage}</p>\n            </>}\n        </section>\n    );\n}\n\nexport default ValidationView;","import useGetData from  '../hooks/useGetData'\nimport { LoadingBox } from './MiscControls';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { AppContext } from '../contexts/AppContext';\n\nconst HomeView = () => {\n    const { loggedIn } = useContext(AppContext);\n    const { data:groups, loading, error, errorMessage } = useGetData({ \n        url:'/api/petition_groups'\n    });\n\n    if(!loggedIn) {\n        return <Redirect to='/login' />\n    }\n    return (\n        <section>\n            <p>Welcome to the petition app!</p>\n\n            {groups && groups.length > 0 && <p>Here are a list of the petition groups that you're a member of</p>}\n            {groups && groups.length < 1 && <p>You are not a member of any petition groups yet. Would you like to create one?</p>}\n            <ul className='petition_groups_list_group'>\n            {groups && groups.map((petitionGroup) => \n            <li className='petition_groups_list_item' key={petitionGroup['id']}>\n                <Link className='petition_groups_list_btn' to={`/petition_group/${petitionGroup['id']}`}>View</Link>\n                <span>{petitionGroup['group_name']}</span>\n            </li>)}\n            </ul>\n            {groups && <div className='add_petition_group_btn'>\n                <Link className='add_petition_group_text' to='/add_petition_group'>Add New Petition Group</Link>\n            </div>}\n            <LoadingBox loading={loading} error={error} errorMessage={errorMessage} />\n        </section>\n    );\n}\n\nexport default HomeView\n","\nimport { SimpleButton } from './MiscControls';\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { AppContext } from '../contexts/AppContext';\nimport usePostData from  '../hooks/usePostData';\n\nconst TopNavSection = () => {\n    const { authData, loggedIn, setLogout }= useContext(AppContext);\n    const loggedInUser = loggedIn ? authData.user_email : \"\";\n    const { post:logout } = usePostData({ url:'/api/logout', onConfirm:() => setLogout(true) });\n\n    return (\n        <section>\n            <h1 className='top_heading_text'>Petition App Prototype</h1>\n            <nav className='top_nav'>\n                <Link className='nav_link' to='/debug/users'>Users(debug)</Link>\n                { loggedIn && <Link className='nav_link' to='/'>Home</Link> }\n                { !loggedIn && <Link className='nav_link' to='/login'>Login</Link> }\n                { loggedIn && <SimpleButton className='nav_link' onBtnClick={logout} text='Logout'/> }\n            </nav>\n            <p className='logged_in_user_text'>{loggedInUser}</p>\n        </section>   \n    );\n}\n\nexport default TopNavSection\n","import useGetDataBase from  './useGetDataBase';\nimport { useState } from 'react';\n\nconst useGetAuthData = () => {\n    const [ logout, setLogout ] = useState(false);\n    const { data:authData, getData:getAuthData, loading, error, errorMessage } = useGetDataBase({ \n        url:'/api/get_current_user',\n        logout:logout\n    });\n\n    const loggedIn = authData != null && 'user_email' in authData;\n    \n    const refreshAuth = () => {\n        setLogout(false);\n        getAuthData();\n    }\n    return { authData, refreshAuth, loggedIn, setLogout, loading, error, errorMessage };\n}\n\nexport default useGetAuthData;","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport DebugUsersView from './DebugUsersView';\nimport PetitionGroupView from './PetitionGroupView';\nimport AddPetitionGroupView from './AddPetitionGroupView';\nimport AddPetitionView from './AddPetitionView';\nimport PetitionView from './PetitionView';\nimport LoginView from './LoginView';\nimport RegisterView from './RegisterView';\nimport ValidationView from './ValidationView';\nimport HomeView from './HomeView';\nimport TopNavSection from './TopNavSection';\nimport { AppContext } from '../contexts/AppContext';\nimport { LoadingBox } from './MiscControls'; \nimport useGetAuthData from '../hooks/useGetAuthData';\nimport { ReactQueryDevtools } from 'react-query/devtools';\n\nconst MainRouterSwitch = () => {\n  return (\n    <Switch>\n      <Route exact path='/' component={HomeView} />\n      <Route exact path='/register' component={RegisterView} />\n      <Route exact path='/debug/users' component={DebugUsersView} />\n      <Route exact path='/login' component={LoginView} />\n      <Route path='/petition_group/' component={ () => <PetitionGroupView basePath='/petition_group/' />} />\n      <Route exact path='/add_petition_group/'  component={AddPetitionGroupView} />\n      <Route path='/add_petition/' component={ () => <AddPetitionView basePath='/add_petition/' />} />\n      <Route path='/petitions/' component={ () => <PetitionView basePath='/petitions/' />} />\n      <Route path='/validations/' component={ () => <ValidationView basePath='/validations/' />} />\n      <Route exact path='/debug/users' component={DebugUsersView} />\n    </Switch>\n  );\n}\n\nconst MainAppRouter = () => {\n  const { authData, loggedIn, refreshAuth, setLogout, loading, error, errorMessage } = useGetAuthData();\n  const clearLogout = () => {\n    setLogout(false);\n  }\n\n  return (\n      <>\n          <AppContext.Provider value={{ authData, loggedIn, refreshAuth, setLogout }}>\n            { !error && <LoadingBox loading={loading} error={error} errorMessage={errorMessage} /> }\n            {!loading && \n            <Router>\n              <TopNavSection />\n              <MainRouterSwitch />\n            </Router>}\n          </AppContext.Provider>\n          <ReactQueryDevtools initialIsOpen={false} />\n      </>\n  );\n}\n\n\n\nexport default MainAppRouter;\n","import './App.css';\nimport MainAppRouter from './components/MainAppRouter';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst App = () => {\n  const queryClient = new QueryClient();\n\n  return (\n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n        <MainAppRouter />  \n        </QueryClientProvider>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}